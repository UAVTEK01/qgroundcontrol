name: Android Qt Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  android-build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install build deps (ninja, GL headers optional)
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      # --- Android SDK (cmdline-tools) ---
      - name: Install Android SDK
        uses: android-actions/setup-android@v3
      - name: Install SDK platforms/build-tools + accept licenses
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # --- NDK r27c (donâ€™t use android-actions/setup-ndk) ---
      - name: Install NDK r27c
        uses: nttld/setup-ndk@v1
        id: ndk
        with:
          ndk-version: r27c
      - name: Export NDK env
        run: |
          echo "ANDROID_NDK_ROOT=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "NDK_ROOT=${{ steps.ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      # --- Qt host (gcc_64) ---
      - name: Install Qt host (gcc_64)
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8.3"
          host: linux
          target: desktop
          arch: gcc_64
          aqtversion: "==3.3.0"
          cache: true
          modules: "qtserialport qtlocation qtpositioning qtsvg qtimageformats qtconnectivity qtshadertools qtquickcontrols2 qt5compat"

      # --- Qt for Android (arm64) ---
      - name: Install Qt for Android (arm64-v8a)
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8.3"
          host: linux
          target: android
          arch: android_arm64_v8a
          aqtversion: "==3.3.0"
          cache: true
          modules: "qtserialport qtlocation qtpositioning qtsvg qtimageformats qtconnectivity qtshadertools qtquickcontrols2 qt5compat"

      # At this point the action has put qt tools (qt-cmake, androiddeployqt) on PATH
      - name: Print key paths (debug)
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT"
          which qt-cmake
          qt-cmake --version
          ninja --version

      - name: Configure (Android)
        env:
          ANDROID_API: "34"
        run: |
          qt-cmake -S . -B build-android -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DQT_ANDROID_ABIS=arm64-v8a \
            -DQT_ANDROID_BUILD_ALL_ABIS=OFF \
            -DANDROID_PLATFORM=android-${ANDROID_API} \
            -DANDROID_SDK_ROOT="${ANDROID_SDK_ROOT}" \
            -DANDROID_NDK_ROOT="${ANDROID_NDK_ROOT}"

      - name: Build
        run: cmake --build build-android --parallel

      # If your project uses androiddeployqt to make an APK/AAB, add it here:
      # - name: Package APK
      #   run: |
      #     cmake --build build-android --target apk
      #     ls -la build-android/**/android-build/*.apk || true