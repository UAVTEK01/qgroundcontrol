name: Android APK (manual)

on:
  workflow_dispatch:


jobs:
  build-android:
    runs-on: ubuntu-22.04

    # Keep a stable local SDK directory so we can cache it
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/Android

    steps:
      - name: Checkout (with submodules) at ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          submodules: recursive

      #####################################################################
      # 1) Use Java 17 BEFORE installing Android SDK so sdkmanager works
      #####################################################################
      - name: Set up Java 17 (for sdkmanager)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Optional: Cache the SDK directory to speed up subsequent runs
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}
          key: ${{ runner.os }}-android-${{ inputs.sdk_platform }}-ndk-${{ inputs.ndk_version }}
          restore-keys: |
            ${{ runner.os }}-android-

      - name: Install Android SDK + NDK (cmdline-tools)
        uses: android-actions/setup-android@v3

      - name: Install SDK components + accept licenses
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          JAVA_HOME: ${{ env.JAVA_HOME }}   # from setup-java (JDK 17)
          PATH: ${{ env.JAVA_HOME }}/bin:${{ env.PATH }}
        run: |
          mkdir -p "$ANDROID_SDK_ROOT"
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;${{ inputs.sdk_platform }}" \
            "build-tools;30.0.3" \
            "ndk;${{ inputs.ndk_version }}" \
            "cmdline-tools;latest"
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      #####################################################################
      # 2) Switch to Java 11 for Qt 5.15.2 / Gradle build compatibility
      #####################################################################
      - name: Switch to Java 11 (for Qt5/Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "11"
          cache: gradle

      #####################################################################
      # 3) Install Qt 5.x (Android target) â€” qmake flow
      #####################################################################
      - name: Install Qt (with Android)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ inputs.qt_version }}
          host: linux
          target: android
          cache: true
          # Add modules if your project needs them, e.g.:
          # modules: qtimageformats

      #####################################################################
      # 4) Configure & Build (qmake)
      #####################################################################
      - name: Configure (qmake)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          mkdir -p build-android
          pushd build-android
          ${HOME}/Qt/${{ inputs.qt_version }}/android/bin/qmake -r ../qgroundcontrol.pro -spec android-clang \
            CONFIG+=release ANDROID_ABIS="${{ inputs.abis }}"
          popd

      - name: Build
        run: |
          pushd build-android
          make -j"$(nproc)"
          popd

      #####################################################################
      # 5) Package APK (Gradle)
      #####################################################################
      - name: Package APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          JAVA_HOME: ${{ env.JAVA_HOME }}   # now JDK 11
          PATH: ${{ env.JAVA_HOME }}/bin:${{ env.PATH }}
        run: |
          pushd build-android/android-build
          ./gradlew --no-daemon --warning-mode=all assembleRelease
          popd

      #####################################################################
      # 6) Upload artifact
      #####################################################################
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: qgc-apk-${{ inputs.ref }}
          path: build-android/android-build/app/build/outputs/apk/release/*.apk
