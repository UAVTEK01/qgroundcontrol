name: Android Build (Qt 6.8.3, no aqt)

on:
  workflow_dispatch: {}
  push:
    paths:
      - ".github/workflows/build-android.yml"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_API: "34"
      BUILD_DIR: build-android

    steps:
      - name: Identify this workflow
        run: |
          echo "This is .github/workflows/build-android.yml"
          echo "If you see 'aqtinstall' in logs, another workflow is still running."

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses & install platforms
        run: |
          yes | sdkmanager --licenses || true
          sdkmanager "platform-tools" "platforms;android-${ANDROID_API}" "build-tools;34.0.0"

      - name: Setup Android NDK r27c
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
          add-to-path: true

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      # ---------- Host Qt (tools for qt-cmake, rcc, etc.) ----------
      - name: Install Qt 6.8.3 (Host gcc_64)
        id: qt_host
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.3
          host: linux
          target: desktop
          arch: gcc_64
          cache: true
          # ensure core desktop modules so qt-cmake and tools are present
          modules: qtbase qttools qtdeclarative qtquickcontrols2 qtsvg qtserialport qtlocation qtpositioning qtimageformats qtconnectivity qtshadertools qt5compat

      - name: Capture Host Qt path
        run: echo "QT_HOST_PATH=${QTDIR}" >> $GITHUB_ENV

      - name: Verify qt-cmake exists and add to PATH (fail fast)
        run: |
          # Primary expected location from the action
          QT_CMAKE="${QT_HOST_PATH}/bin/qt-cmake"
          if [ -x "$QT_CMAKE" ]; then
            echo "Found qt-cmake at $QT_CMAKE"
          else
            # Fallback quick checks
            CANDIDATES=(
              "/home/runner/Qt/6.8.3/gcc_64/bin/qt-cmake"
              "/opt/hostedtoolcache/Qt/6.8.3/gcc_64/bin/qt-cmake"
            )
            for c in "${CANDIDATES[@]}"; do
              if [ -x "$c" ]; then
                QT_CMAKE="$c"
                break
              fi
            done
          fi

          # Wide search fallback (may be slower)
          if [ -z "$QT_CMAKE" ]; then
            QT_CMAKE=$(find /home/runner /opt -type f -name qt-cmake -executable 2>/dev/null | head -n1 || true)
          fi

          if [ -z "$QT_CMAKE" ]; then
            echo "ERROR: qt-cmake not found after host Qt install. Diagnostic listing:"
            echo "Contents of QT_HOST_PATH (${QT_HOST_PATH}):"
            ls -al "${QT_HOST_PATH}" || true
            echo "/home/runner/Qt listing:"
            ls -al /home/runner/Qt || true](#)
î€€
