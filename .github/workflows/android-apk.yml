name: Android Build (manual)

on:
  workflow_dispatch:

env:
  QT_VERSION: 6.6.3
  ANDROID_API: 33
  ANDROID_NDK_VERSION: 25.2.9519653
  BUILD_DIR: build-android
  QT_HOST_KIT: gcc_64
  QT_ANDROID_KIT: android_arm64_v8a
  QT_BASE_URL: https://download.qt.io

jobs:
  android:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install aqtinstall
        run: |
          python -m pip install --upgrade pip
          pip install aqtinstall==3.3.0

      # Use the preinstalled cmdline-tools' sdkmanager, but install INTO our local SDK root
      - name: Install Android SDK + NDK
        env:
          ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
        run: |
          set -e
          mkdir -p "$ANDROID_SDK_ROOT"
          SDKMGR="/usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager"

          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" \
            "platforms;android-${{ env.ANDROID_API }}" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "ndk;${{ env.ANDROID_NDK_VERSION }}"

          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "NDK_ROOT=$ANDROID_SDK_ROOT/ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV

      - name: Install Qt (host + android)
        run: |
          set -e
          mkdir -p "$HOME/Qt"

          # Host Qt
          aqt install-qt linux desktop "${QT_VERSION}" "${QT_HOST_KIT}" --outputdir "$HOME/Qt"

          # Android Qt (modules commonly required by QGC)
          aqt install-qt linux android "${QT_VERSION}" "${QT_ANDROID_KIT}" --outputdir "$HOME/Qt" \
            -m qtserialport qtlocation qtpositioning qtsvg qtimageformats qtconnectivity qtshadertools qtquickcontrols2 qt5compat

          echo "QT_HOST_PATH=$HOME/Qt/${QT_VERSION}/${QT_HOST_KIT}" >> $GITHUB_ENV
          echo "QT_ANDROID_PATH=$HOME/Qt/${QT_VERSION}/${QT_ANDROID_KIT}" >> $GITHUB_ENV

      - name: Configure (CMake)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          NDK_ROOT: ${{ env.NDK_ROOT }}
          QT_HOST_PATH: ${{ env.QT_HOST_PATH }}
          QT_ANDROID_PATH: ${{ env.QT_ANDROID_PATH }}
          BUILD_DIR: ${{ env.BUILD_DIR }}
          ANDROID_API: ${{ env.ANDROID_API }}
        run: |
          set -e
          echo "QT_HOST_PATH=${QT_HOST_PATH}"
          echo "QT_ANDROID_PATH=${QT_ANDROID_PATH}"
          # Sanity: show that Qt bins exist
          ls -la "${QT_HOST_PATH}/bin" || true
          ls -la "${QT_ANDROID_PATH}/bin" || true

          cmake -S . -B "${BUILD_DIR}" -G Ninja \
            -D CMAKE_BUILD_TYPE=Release \
            -D ANDROID=ON \
            -D ANDROID_ABI=arm64-v8a \
            -D ANDROID_PLATFORM=android-${ANDROID_API} \
            -D ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT}" \
            -D ANDROID_NDK_ROOT="${NDK_ROOT}" \
            -D QT_HOST_PATH="${QT_HOST_PATH}" \
            -D CMAKE_TOOLCHAIN_FILE="${NDK_ROOT}/build/cmake/android.toolchain.cmake" \
            -D CMAKE_FIND_ROOT_PATH="${QT_ANDROID_PATH}" \
            -D CMAKE_PREFIX_PATH="${QT_ANDROID_PATH};${QT_HOST_PATH}"

      - name: Build (Ninja)
        run: ninja -C "${BUILD_DIR}"

      - name: Package APK/AAB (placeholder)
        run: echo "Packaging placeholder"