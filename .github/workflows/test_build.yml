name: Android-Linux-6.6.3 (manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        BuildType: [Release]

    defaults:
      run:
        shell: bash

    env:
      ARTIFACT: QGroundControl.apk
      PACKAGE: QGroundControl
      QT_VERSION: 6.6.3
      # same ABI logic as upstream; keep both ABIs like the official file
      QT_ANDROID_ABIS: ${{ matrix.BuildType == 'Release' && 'armeabi-v7a;arm64-v8a' || 'arm64-v8a' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      # Uses the project's own composite action: .github/actions/common
      - name: Initial Setup
        uses: ./.github/actions/common

      # Uses the project's own composite action: .github/actions/qt-android
      - name: Install Qt for Android
        uses: ./.github/actions/qt-android
        with:
          host: linux
          arch: gcc_64
          version: ${{ env.QT_VERSION }}
          abis: ${{ env.QT_ANDROID_ABIS }}
          cpm-modules: ${{ runner.temp }}/shadow_build_dir/cpm_modules

      # Mirror the PR signing path from upstream so manual runs build a debug-signed APK
      - name: Setup android signing (debug)
        run: |
          echo "QGC_ANDROID_KEYSTORE_STORE_PASS=android" >> $GITHUB_ENV
          echo "QGC_ANDROID_KEYSTORE_KEY_PASS=android" >> $GITHUB_ENV
          echo "QGC_ANDROID_KEYSTORE_PATH=${{ github.workspace }}/deploy/android/debug.keystore" >> $GITHUB_ENV
          echo "QGC_ANDROID_KEYSTORE_ALIAS=androiddebugkey" >> $GITHUB_ENV

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: |
          ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} \
            -DQT_ANDROID_ABIS="${{ env.QT_ANDROID_ABIS }}" \
            -DQT_ANDROID_BUILD_ALL_ABIS=OFF \
            -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../gcc_64" \
            -DQT_ANDROID_SIGN_APK=ON \
            -DQT_ANDROID_KEYSTORE_STORE_PASS=$QGC_ANDROID_KEYSTORE_STORE_PASS \
            -DQT_ANDROID_KEYSTORE_KEY_PASS=$QGC_ANDROID_KEYSTORE_KEY_PASS \
            -DQT_ANDROID_KEYSTORE_PATH=$QGC_ANDROID_KEYSTORE_PATH \
            -DQT_ANDROID_KEYSTORE_ALIAS=$QGC_ANDROID_KEYSTORE_ALIAS \
            -DQT_DEBUG_FIND_PACKAGE=ON \
            -DQGC_STABLE_BUILD=OFF

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Copy APK to named artifact
        run: cp ${{ runner.temp }}/shadow_build_dir/android-build/*.apk ${{ runner.temp }}/shadow_build_dir/${{ env.ARTIFACT }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ runner.temp }}/shadow_build_dir/android-build/*.apk