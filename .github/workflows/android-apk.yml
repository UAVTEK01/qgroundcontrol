name: Android APK (Manual Build)

on:
  workflow_dispatch:  # Only runs when you click “Run workflow” in GitHub

jobs:
  build-android:
    runs-on: ubuntu-22.04

    env:
      QT_VERSION: 6.6.3
      ANDROID_API: 33
      ANDROID_NDK_VERSION: 25.2.9519653
      ANDROID_SDK_ROOT: /home/runner/work/qgroundcontrol/qgroundcontrol/android-sdk
      ANDROID_HOME: /home/runner/work/qgroundcontrol/qgroundcontrol/android-sdk
      NDK_ROOT: /home/runner/work/qgroundcontrol/qgroundcontrol/android-sdk/ndk/25.2.9519653
      BUILD_DIR: build-android
      QT_HOST_KIT: gcc_64
      QT_ANDROID_KIT: android_arm64_v8a
      QT_BASE_URL: https://download.qt.io
      JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64
      JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build python3-pip unzip zip lld ccache
          python3 -m pip install --upgrade "aqtinstall>=3.3.0"

      - name: Install Android SDK + NDK
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-${ANDROID_API}" \
            "build-tools;34.0.0" \
            "ndk;${ANDROID_NDK_VERSION}"

      - name: Install Qt (host + android)
        run: |
          mkdir -p $HOME/Qt
          aqt install-qt linux desktop ${QT_VERSION} ${QT_HOST_KIT} --outputdir $HOME/Qt
          aqt install-qt linux android ${QT_VERSION} ${QT_ANDROID_KIT} --outputdir $HOME/Qt

      - name: Configure CMake
        run: |
          set -e
          export QT_HOST_PATH="$HOME/Qt/${QT_VERSION}/${QT_HOST_KIT}"
          export QT_ANDROID_PATH="$HOME/Qt/${QT_VERSION}/${QT_ANDROID_KIT}"
          echo "QT_HOST_PATH=${QT_HOST_PATH}"
          echo "QT_ANDROID_PATH=${QT_ANDROID_PATH}"

          cmake -S . -B "${BUILD_DIR}" -G Ninja \
            -D CMAKE_BUILD_TYPE=Release \
            -D ANDROID=ON \
            -D ANDROID_ABI=arm64-v8a \
            -D ANDROID_PLATFORM=android-${ANDROID_API} \
            -D ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT}" \
            -D ANDROID_NDK_ROOT="${NDK_ROOT}" \
            -D QT_HOST_PATH="${QT_HOST_PATH}" \
            -D CMAKE_TOOLCHAIN_FILE="${NDK_ROOT}/build/cmake/android.toolchain.cmake" \
            -D CMAKE_FIND_ROOT_PATH="${QT_ANDROID_PATH}" \
            -D CMAKE_PREFIX_PATH="${QT_ANDROID_PATH};${QT_HOST_PATH}"

      - name: Build
        run: |
          cmake --build "${BUILD_DIR}" --parallel

      - name: Package APK
        run: |
          cmake --build "${BUILD_DIR}" --target apk
          echo "APK outputs:"
          find "${BUILD_DIR}" -type f -name "*.apk" -print

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qgroundcontrol-android
          path: |
            ${BUILD_DIR}/**/*.apk
            ${BUILD_DIR}/**/*.aab
          if-no-files-found: warn